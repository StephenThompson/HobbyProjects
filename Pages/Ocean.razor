@page "/ocean"

@inject IJSRuntime JSRuntime;

<div class="container" style="align-items: center; text-align: center; ">
    <div class="text"  style=" padding-left: 20px;">
        <h1>Ocean</h1>
        <p>Below is an example of an ocean simulated using Gerstner Waves.</p>
    </div>

    <div width="512px" height="512px">
    <div id="threejscontainer"/>
    </div>

    <div class="slidecontainer">
        <span>
            <b class="slideHeader">Sun Elevation:</b>
            <p class="slideText">0°</p>
            <input type="range" min="0" max="90" class="slider" @bind="sunElevation" style="display: inline-block;" >
            <p class="slideText">90°</p>
        </span>
    </div>

    <div class="slidecontainer">
        <span>
            <b class="slideHeader">Sun Azimuth:</b>
            <p class="slideText">0°</p>
            <input type="range" min="0" max="360" class="slider" @bind="sunAzimuth" style="display: inline-block;">
            <p class="slideText">360°</p>
        </span>
    </div>

    <div class="text"  style=" padding-left: 20px; text-align: center;">
        <h1>Controls</h1>
        <table>
            <tbody>
                <tr>
                    <th>Left Mouse:</th>
                    <td>Rotate Camera</td>
                </tr>
                <tr>
                    <th>Middle Mouse:</th>
                    <td>Zoom In/Out</td>
                </tr>
                <tr>
                    <th>Right Mouse:</th>
                    <td>Pan Camera</td>
                </tr>
            </tbody>
        </table>
    </div>
</div>


@code {
    private string sunElevation { get => _sunElevation; set { _sunElevation = value; ChangeSunDirection(); } }
    private string sunAzimuth { get => _sunAzimuth; set { _sunAzimuth = value; ChangeSunDirection(); } }
    private string _sunElevation = "45";
    private string _sunAzimuth = "270";

    private async void ChangeSunDirection()
    {        
        if (float.TryParse(sunElevation, out float elevation) && float.TryParse(sunAzimuth, out float azimuth))
        {
            await JSRuntime.InvokeAsync<object>("scene.changeSunDirection", new object[] { elevation, azimuth });
        }
    }

    protected async override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("scene.create");
            ChangeSunDirection();
        }
    }
}